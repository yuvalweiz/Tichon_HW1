Index: src/SystemC.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Error.*;\r\n\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\n\r\npublic class SystemC {\r\n    private User _connectedUser;\r\n    private HashMap<String, Product> PrductDict = new HashMap<String, Product>();\r\n\r\n    public SystemC(){\r\n        this._connectedUser = null;\r\n    } //defult constructor\r\n    public boolean AddUser(String _login_id,String _password,int premium,Address address,String phone, String email){\r\n        if(User.UserDict.containsKey(_login_id)){\r\n            return false;\r\n        }\r\n        User newUser= new User(_login_id,_password);\r\n        Customer newCustomer = new Customer(address,phone,email);\r\n        Account newAccount;\r\n        if(premium == 1){\r\n            newAccount = new PremiumAccount(_login_id,newCustomer);\r\n            newCustomer.set_account(newAccount);\r\n            newAccount.set_customer(newCustomer);\r\n        }\r\n        if (premium == 0){\r\n            newAccount = new Account(newCustomer);\r\n            newCustomer.set_account(newAccount);\r\n            newAccount.set_customer(newCustomer);\r\n        }\r\n        newCustomer.set_user(newUser);\r\n        newUser.set_customer(newCustomer);\r\n        Date date = new Date();\r\n        ShoppingCart cart = new ShoppingCart(date);\r\n        return true;\r\n\r\n    }\r\n    public boolean RemoveUser(String Login_id) throws Erorr {\r\n        if (User.UserDict.containsKey(Login_id)!= true)\r\n        {\r\n            return false;\r\n        }\r\n        if(_connectedUser!=null && _connectedUser.get_login_id().equals(Login_id)){\r\n            logoutUser(_connectedUser.get_login_id());\r\n        }\r\n        User.UserDict.remove(Login_id);\r\n        return true;\r\n    }\r\n\r\n    public boolean loginUser(String _loginid, String password) throws Erorr {\r\n        Erorr error;\r\n        if(this._connectedUser != null){\r\n            error = new there_is_user_connected_EX();\r\n            throw error;\r\n        }\r\n\r\n        if(!User.UserDict.containsKey(_loginid)){\r\n            error = new id_is_wrong_EX();\r\n            throw error;\r\n\r\n        }\r\n        if(!User.UserDict.get(_loginid).get_password().equals(password)){\r\n            error = new pass_is_wrong_EX();\r\n            throw error;\r\n        }\r\n        this._connectedUser = User.UserDict.get(_loginid);\r\n        return true;\r\n    }\r\n    public boolean logoutUser(String _loginid) throws Erorr {\r\n        Erorr error;\r\n        if(this._connectedUser == null){\r\n            error = new there_is_no_user_connected_EX();\r\n            throw error;\r\n        }\r\n        this._connectedUser = null;\r\n        return true;\r\n    }\r\n\r\n    public void Create_new_order(Address address) throws Erorr {\r\n\r\n        if(_connectedUser==null)\r\n        {\r\n            Erorr error = new there_is_no_user_connected_EX();\r\n            throw error;\r\n        }\r\n        Date currDate = new Date();\r\n        Order order = new Order(currDate,address,_connectedUser.get_customer().get_account());\r\n        _connectedUser.get_customer().get_account().AddOrder(order);\r\n        _connectedUser.get_customer().get_account().set_lastOrder(order.get_number());\r\n        System.out.println(\"Your Order number is: \" + order.get_number());\r\n\r\n    }\r\n\r\n    public void Add_product_to_order(String Order_ID,String Login_ID,String Product_Name) throws Erorr {\r\n        Erorr error ;\r\n\r\n        if (_connectedUser == null)\r\n        {\r\n            error = new there_is_no_user_connected_EX();\r\n            throw error;\r\n        }\r\n        User sellerUser = User.UserDict.get(Login_ID);\r\n        if (sellerUser == null)\r\n        {\r\n\r\n            error=new id_is_wrong_EX();\r\n            throw error;\r\n        }\r\n        Account Seller_account = sellerUser.get_customer().get_account();\r\n        if(!(Seller_account instanceof PremiumAccount))\r\n        {\r\n            error = new not_premium_user();\r\n            throw error;\r\n        }\r\n\r\n        Order Buyerorder = _connectedUser.get_customer().get_account().getOrder(Order_ID);\r\n        if (Buyerorder == null)\r\n        {\r\n            error = new order_is_not_exist();\r\n            throw error;\r\n        }\r\n        Product SellerProduct = ((PremiumAccount) Seller_account).GetProduct(Product_Name);\r\n        if (SellerProduct==null)\r\n        {\r\n            error = new product_is_not_exist();\r\n            throw error;\r\n        }\r\n        for (int i=0;i<SellerProduct.getLineItemsVec().size();i++)\r\n        {\r\n            if (SellerProduct.getLineItemsVec().get(i).getQuantity()==0)\r\n            {\r\n                SellerProduct.getLineItemsVec().remove(i);\r\n            }\r\n\r\n        }\r\n        SellerProduct.getLineItemsVec().get(0).setQuantity(SellerProduct.getLineItemsVec().get(0).getQuantity()-1);\r\n        int price=SellerProduct.getLineItemsVec().get(0).getPrice();\r\n        Buyerorder.AddProduct(SellerProduct,price);\r\n\r\n\r\n\r\n    }\r\n    public void DisplayOrder() throws Erorr {\r\n        Erorr erorr;\r\n        if(_connectedUser == null){\r\n            erorr = new there_is_no_user_connected_EX();\r\n            throw erorr;\r\n        }\r\n        Order myOrder = _connectedUser.get_customer().get_account().getOrder(_connectedUser.get_customer().get_account().get_lastOrder());\r\n        if(myOrder == null){\r\n            erorr = new order_is_not_exist();\r\n            throw erorr;\r\n        }\r\n        int price;\r\n        int quan;\r\n        float sum = 0;\r\n        if(myOrder.getLineItemsVec() != null){\r\n        for(int i=0;i<myOrder.getLineItemsVec().size();i++){\r\n            quan = myOrder.getLineItemsVec().get(i).getQuantity();\r\n            price = myOrder.getLineItemsVec().get(i).getPrice();\r\n            sum = sum + (quan * price);\r\n        }}\r\n        myOrder.set_total(sum);\r\n\r\n        System.out.println(\"Order Number: \" + myOrder.get_number());\r\n        System.out.println(\"Order Date: \" + myOrder.get_ordered());\r\n        System.out.println(\"Shipment Date: \" + myOrder.get_shipped());\r\n        System.out.println(\"Shipment Address: \" + myOrder.get_ship_to());\r\n        System.out.println(\"Order status: \" + myOrder.get_status());\r\n        System.out.println(\"Total payment: \" + myOrder.get_total());\r\n\r\n    }\r\n\r\n    public void LinkProduct (String name,int price,int Quan) throws Erorr {\r\n        Erorr error;\r\n        if (_connectedUser == null)\r\n        {\r\n            error = new there_is_no_user_connected_EX();\r\n            throw error;\r\n        }\r\n        Account account = _connectedUser.get_customer().get_account();\r\n        if(!(account instanceof PremiumAccount))\r\n        {\r\n            error = new not_premium_user();\r\n            throw error;\r\n        }\r\n        Product product = PrductDict.get(name);\r\n        if(product == null){\r\n            error = new product_is_not_exist();\r\n        }\r\n        LineItem lineItem = new LineItem(Quan,price);\r\n        product.getLineItemsVec().add(lineItem);\r\n        ((PremiumAccount) account).AddProduct(product);\r\n\r\n    }\r\n\r\n\r\n    public void AddProduct(String name,String supllierName){\r\n        Supplier supnik = new Supplier(supllierName);\r\n        Product prod = new Product(name,supnik);\r\n        supnik.Add_Product(prod);\r\n        PrductDict.put(prod.get_id(),prod);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/SystemC.java b/src/SystemC.java
--- a/src/SystemC.java	(revision 0f75797910f768fd1c9bb3577ec36656764fc1de)
+++ b/src/SystemC.java	(date 1668519430945)
@@ -124,7 +124,7 @@
             error = new product_is_not_exist();
             throw error;
         }
-        for (int i=0;i<SellerProduct.getLineItemsVec().size();i++)
+        for (int i=0;i<SellerProduct.getLineItemsVec().size();i++) // I dont think we need this
         {
             if (SellerProduct.getLineItemsVec().get(i).getQuantity()==0)
             {
@@ -132,7 +132,7 @@
             }
 
         }
-        SellerProduct.getLineItemsVec().get(0).setQuantity(SellerProduct.getLineItemsVec().get(0).getQuantity()-1);
+        SellerProduct.getLineItemsVec().get(0).setQuantity(SellerProduct.getLineItemsVec().get(0).getQuantity()-1);//
         int price=SellerProduct.getLineItemsVec().get(0).getPrice();
         Buyerorder.AddProduct(SellerProduct,price);
 
@@ -201,5 +201,9 @@
         PrductDict.put(prod.get_id(),prod);
     }
 
+    public void ShowObjectID(String ID){
+
+    }
+
 
 }
Index: src/Customer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Customer {\r\n    private static int Curr_Id=0;\r\n    private String _id;\r\n    private Address _address;\r\n    private String _phone;\r\n\r\n    public Account get_account() {\r\n        return _account;\r\n    }\r\n\r\n    private String _email;\r\n    private User _user;\r\n    private Account _account;\r\n\r\n    public void set_account(Account _account) {\r\n        this._account = _account;\r\n    }\r\n\r\n\r\n\r\n    public void set_user(User _user) {\r\n        this._user = _user;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Customer{\" +\r\n                \"ID = '\" + _id + '\\'' +\r\n                \", Address = \" + _address +\r\n                \", Phone = '\" + _phone + '\\'' +\r\n                \", Email = '\" + _email + '\\'' +\r\n                \", User = \" + _user +\r\n                \", Account = \" + _account +\r\n                '}';\r\n    }\r\n\r\n    public Customer(Address _address, String _phone, String _email) {\r\n        this._id = String.valueOf(Curr_Id) + \"$\";\r\n        Curr_Id++;\r\n        this._address = _address;\r\n        this._phone = _phone;\r\n        this._email = _email;\r\n\r\n    }\r\n\r\n    public String get_id() {\r\n        return _id;\r\n    }\r\n\r\n    public void set_id(String _id) {\r\n        this._id = _id;\r\n    }\r\n\r\n    public Address get_address() {\r\n        return _address;\r\n    }\r\n\r\n    public void set_address(Address _address) {\r\n        this._address = _address;\r\n    }\r\n\r\n    public String get_phone() {\r\n        return _phone;\r\n    }\r\n\r\n    public void set_phone(String _phone) {\r\n        this._phone = _phone;\r\n    }\r\n\r\n    public String get_email() {\r\n        return _email;\r\n    }\r\n\r\n    public void set_email(String _email) {\r\n        this._email = _email;\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Customer.java b/src/Customer.java
--- a/src/Customer.java	(revision 0f75797910f768fd1c9bb3577ec36656764fc1de)
+++ b/src/Customer.java	(date 1668519471886)
@@ -35,7 +35,7 @@
     }
 
     public Customer(Address _address, String _phone, String _email) {
-        this._id = String.valueOf(Curr_Id) + "$";
+        this._id ="C-"+ String.valueOf(Curr_Id) ;
         Curr_Id++;
         this._address = _address;
         this._phone = _phone;
Index: src/Payment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Date;\r\n\r\npublic class Payment {\r\n    private String id;\r\n    private Date paid;\r\n    private Float total;\r\n    private String details;\r\n\r\n    public Payment(String ID, Date PAID, Float TOTAL, String DETAILS){\r\n        this.id = ID;\r\n        this.paid = PAID;\r\n        this.total = TOTAL;\r\n        this.details = DETAILS;\r\n    }\r\n\r\n    public String getId() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(String id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public Date getPaid() {\r\n        return paid;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Payment{\" +\r\n                \"ID = '\" + id + '\\'' +\r\n                \", Paid = \" + paid +\r\n                \", Total = \" + total +\r\n                \", Details = '\" + details + '\\'' +\r\n                '}';\r\n    }\r\n\r\n    public void setPaid(Date paid) {\r\n        this.paid = paid;\r\n    }\r\n\r\n    public Float getTotal() {\r\n        return total;\r\n    }\r\n\r\n    public void setTotal(Float total) {\r\n        this.total = total;\r\n    }\r\n\r\n    public String getDetails() {\r\n        return details;\r\n    }\r\n\r\n    public void setDetails(String details) {\r\n        this.details = details;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Payment.java b/src/Payment.java
--- a/src/Payment.java	(revision 0f75797910f768fd1c9bb3577ec36656764fc1de)
+++ b/src/Payment.java	(date 1668519662763)
@@ -1,13 +1,15 @@
 import java.util.Date;
 
 public class Payment {
+    private static int Curr_id=0;
     private String id;
     private Date paid;
     private Float total;
     private String details;
 
-    public Payment(String ID, Date PAID, Float TOTAL, String DETAILS){
-        this.id = ID;
+    public Payment(Date PAID, Float TOTAL, String DETAILS){
+        this.id = "T-"+String.valueOf(Curr_id);//T- yani TASHLUM
+        Curr_id++;
         this.paid = PAID;
         this.total = TOTAL;
         this.details = DETAILS;
Index: src/Account.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Date;\r\nimport java.util.HashMap;\r\n\r\npublic class Account {\r\n    private static int Curr_Id=0;\r\n    private  String _id;\r\n    private String _billing_address;\r\n    private boolean _is_closed;\r\n    private Date _open;\r\n    private Date _closed;\r\n    private int _balance;\r\n    private String _lastOrder;\r\n    private HashMap<String, Order> OrderDict = new HashMap<String, Order>();\r\n    private Customer _customer; // wont be able to create account without customer!\r\n\r\n\r\n\r\n    public Account(Customer _customer) {\r\n        this._id = String.valueOf(Curr_Id);\r\n        Curr_Id++;\r\n        this._is_closed = false;\r\n        this._open = new Date();\r\n        this._balance = 0;\r\n        this._customer = _customer;\r\n    }\r\n\r\n    public void AddOrder (Order order){\r\n        this.OrderDict.put(order.get_number(),order);\r\n    }\r\n\r\n    public void set_lastOrder(String _lastOrder) {\r\n        this._lastOrder = _lastOrder;\r\n    }\r\n\r\n    public String get_lastOrder() {\r\n        return _lastOrder;\r\n    }\r\n\r\n    public Order getOrder (String number){\r\n        if(!OrderDict.containsKey(number)){\r\n            return null;\r\n        }\r\n        return OrderDict.get(number);\r\n    }\r\n\r\n    public void set_customer(Customer _customer) {\r\n        this._customer = _customer;\r\n    }\r\n    public String get_id() {\r\n        return _id;\r\n    }\r\n\r\n    public void set_id(String _id) {\r\n        this._id = _id;\r\n    }\r\n\r\n    public String get_billing_address() {\r\n        return _billing_address;\r\n    }\r\n\r\n    public void set_billing_address(String _billing_address) {\r\n        this._billing_address = _billing_address;\r\n    }\r\n\r\n    public boolean is_is_closed() {\r\n        return _is_closed;\r\n    }\r\n\r\n    public void set_is_closed(boolean _is_closed) {\r\n        this._is_closed = _is_closed;\r\n    }\r\n\r\n    public Date get_open() {\r\n        return _open;\r\n    }\r\n\r\n    public void set_open(Date _open) {\r\n        this._open = _open;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Account{\" +\r\n                \"ID = '\" + _id + '\\'' +\r\n                \", Billing Address = '\" + _billing_address + '\\'' +\r\n                \", Is Closed=\" + _is_closed +\r\n                \", Open = \" + _open +\r\n                \", Closed = \" + _closed +\r\n                \", Balance = \" + _balance +\r\n                \", Last Order = '\" + _lastOrder + '\\'' +\r\n                \", Orders = \" + OrderDict +\r\n                \", Customer = \" + _customer +\r\n                '}';\r\n    }\r\n\r\n    public Date get_closed() {\r\n        return _closed;\r\n    }\r\n\r\n    public void set_closed(Date _closed) {\r\n        this._closed = _closed;\r\n    }\r\n\r\n    public int get_balance() {\r\n        return _balance;\r\n    }\r\n\r\n    public void set_balance(int _balance) {\r\n        this._balance = _balance;\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Account.java b/src/Account.java
--- a/src/Account.java	(revision 0f75797910f768fd1c9bb3577ec36656764fc1de)
+++ b/src/Account.java	(date 1668519451598)
@@ -16,7 +16,7 @@
 
 
     public Account(Customer _customer) {
-        this._id = String.valueOf(Curr_Id);
+        this._id ="A-"+ String.valueOf(Curr_Id);
         Curr_Id++;
         this._is_closed = false;
         this._open = new Date();
Index: src/Product.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.sound.sampled.Line;\r\nimport java.util.Dictionary;\r\nimport java.util.Vector;\r\n\r\npublic class Product {\r\n    private String _id;\r\n    private static int Curr_id=0;\r\n    private String _name;\r\n    private Vector<LineItem> lineItemsVec;\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Product{\" +\r\n                \"ID = '\" + _id + '\\'' +\r\n                \", Name = '\" + _name + '\\'' +\r\n                \", LineItems = \" + lineItemsVec +\r\n                \", Supplier = \" + _supplier +\r\n                '}';\r\n    }\r\n\r\n    private Supplier _supplier;\r\n\r\n\r\n\r\n    public Product(String _name, Supplier _supplier) {\r\n\r\n\r\n        this._id=String.valueOf(Curr_id);\r\n        Curr_id++;\r\n        this._name = _name;\r\n        this._supplier = _supplier;\r\n        this.lineItemsVec = new Vector<LineItem>();\r\n    }\r\n\r\n\r\n    public void set_id(String _id) {\r\n        this._id = _id;\r\n    }\r\n\r\n    public void set_name(String _name) {\r\n        this._name = _name;\r\n    }\r\n\r\n    public Vector<LineItem> getLineItemsVec() {\r\n        return lineItemsVec;\r\n    }\r\n\r\n    public String get_id() {\r\n        return _id;\r\n    }\r\n\r\n    public String get_name() {\r\n        return _name;\r\n    }\r\n\r\n    public void Add_Line_Item (LineItem lineitem)\r\n    {\r\n        this.lineItemsVec.add(lineitem);\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Product.java b/src/Product.java
--- a/src/Product.java	(revision 0f75797910f768fd1c9bb3577ec36656764fc1de)
+++ b/src/Product.java	(date 1668519518964)
@@ -25,7 +25,7 @@
     public Product(String _name, Supplier _supplier) {
 
 
-        this._id=String.valueOf(Curr_id);
+        this._id="P-"+String.valueOf(Curr_id);
         Curr_id++;
         this._name = _name;
         this._supplier = _supplier;
Index: src/Supplier.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.HashMap;\r\nimport java.util.Vector;\r\n\r\npublic class Supplier\r\n{\r\n    private static int Curr_Id=0;\r\n    String _id;\r\n    String _name;\r\n    public static HashMap<String, Supplier> SupllierDict = new HashMap<String, Supplier>();\r\n    Vector<Product> productsVec;\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Supplier{\" +\r\n                \"ID = '\" + _id + '\\'' +\r\n                \", Name = '\" + _name + '\\'' +\r\n                \", Products = \" + productsVec +\r\n                '}';\r\n    }\r\n\r\n    public Supplier(String _name) {\r\n        this._id = String.valueOf(Curr_Id) + \":)\";\r\n        Curr_Id++;\r\n        this._name = _name;\r\n        this.productsVec = new Vector<>();\r\n        SupllierDict.put(this._id,this);\r\n\r\n\r\n    }\r\n\r\n    public void set_id(String _id) {\r\n        this._id = _id;\r\n    }\r\n\r\n    public void set_name(String _name) {\r\n        this._name = _name;\r\n    }\r\n\r\n    public String get_id() {\r\n        return _id;\r\n    }\r\n\r\n    public String get_name() {\r\n        return _name;\r\n    }\r\n\r\n    public void Add_Product(Product p )\r\n    {\r\n        productsVec.add(p);\r\n    }\r\n    public void Delete_Product(String Product_Id)\r\n    {\r\n        for(int i=0;i<productsVec.size();i++)\r\n        {\r\n            if (productsVec.get(i).get_id().equals(Product_Id))\r\n            {\r\n                productsVec.remove(i);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Supplier.java b/src/Supplier.java
--- a/src/Supplier.java	(revision 0f75797910f768fd1c9bb3577ec36656764fc1de)
+++ b/src/Supplier.java	(date 1668519430949)
@@ -19,7 +19,7 @@
     }
 
     public Supplier(String _name) {
-        this._id = String.valueOf(Curr_Id) + ":)";
+        this._id ="S-"+ String.valueOf(Curr_Id);
         Curr_Id++;
         this._name = _name;
         this.productsVec = new Vector<>();
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5198120f-0955-4c57-bec4-bc285fab6ab4\" name=\"Changes\" comment=\"hara ba leben\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/SystemC.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/SystemC.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2HGzfH0UCszOQZeFNGHalD4475Y\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Test.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Tichon_HW1\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Test\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.Test.test\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"5198120f-0955-4c57-bec4-bc285fab6ab4\" name=\"Changes\" comment=\"\" />\r\n      <created>1667926313386</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1667926313386</updated>\r\n      <workItem from=\"1668324775726\" duration=\"2848000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"test1\">\r\n      <created>1667926772421</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1667926772421</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Add User func\">\r\n      <created>1668366678281</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668366678281</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Add User func\">\r\n      <created>1668366709485</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668366709485</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"user func update&#10;customer id and account id update\">\r\n      <created>1668425961720</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668425961720</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"user func update&#10;customer id and account id update\">\r\n      <created>1668426006216</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668426006216</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"SystemC class, login method.\">\r\n      <created>1668427248803</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668427248803</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"error class created\">\r\n      <created>1668427786309</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668427786309</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"exceptions\">\r\n      <created>1668430381827</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668430381827</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"blabla\">\r\n      <created>1668433819230</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668433819230</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"blabla\">\r\n      <created>1668433837748</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668433837748</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"hara ba leben\">\r\n      <created>1668447329261</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668447329261</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"hara ba leben\">\r\n      <created>1668448548558</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668448548558</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"13\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"test1\" />\r\n    <MESSAGE value=\"Add User func\" />\r\n    <MESSAGE value=\"user func update&#10;customer id and account id update\" />\r\n    <MESSAGE value=\"SystemC class, login method.\" />\r\n    <MESSAGE value=\"error class created\" />\r\n    <MESSAGE value=\"exceptions\" />\r\n    <MESSAGE value=\"blabla\" />\r\n    <MESSAGE value=\"hara ba leben\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"hara ba leben\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0f75797910f768fd1c9bb3577ec36656764fc1de)
+++ b/.idea/workspace.xml	(date 1668519649637)
@@ -2,6 +2,12 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="5198120f-0955-4c57-bec4-bc285fab6ab4" name="Changes" comment="hara ba leben">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Account.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Account.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Customer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Customer.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Payment.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Payment.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Product.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Product.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Supplier.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Supplier.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/SystemC.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/SystemC.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -139,7 +145,14 @@
       <option name="project" value="LOCAL" />
       <updated>1668448548558</updated>
     </task>
-    <option name="localTasksCounter" value="13" />
+    <task id="LOCAL-00013" summary="hara ba leben">
+      <created>1668449440662</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1668449440662</updated>
+    </task>
+    <option name="localTasksCounter" value="14" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
