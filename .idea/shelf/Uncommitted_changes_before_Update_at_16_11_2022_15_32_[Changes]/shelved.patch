Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.Scanner;\r\n\r\n\r\npublic class Main\r\n{\r\n    public static void main(String[] args) throws IOException {\r\n        /* System initialization  */\r\n        SystemC system = new SystemC();\r\n        //Supplier osem = new Supplier(\"Osem\");\r\n        //Supplier EastWest = new Supplier(\"EastWest\");\r\n        //Product bamba = new Product(\"Bamba\",osem);\r\n        system.AddProduct(\"Bamba\",\"Osem\");\r\n        system.AddProduct(\"Ramen\",\"EastWest\");\r\n        //Product ramen = new Product(\"Ramen\",EastWest);\r\n        system.AddUser(\"Dani\",\"Dani123\",0,null,null,null);\r\n        system.AddUser(\"Dana\",\"Dana123\",1,null,null,null);\r\n        PremiumAccount danaIsPremium = (PremiumAccount) User.UserDict.get(\"Dana\").get_customer().get_account();\r\n        danaIsPremium.AddProductByName(\"Bamba\");\r\n        /* End of System initialization  */\r\n\r\n\r\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\r\n        Scanner scanner = new Scanner(System.in);\r\n        int choice;\r\n        while(true)\r\n        {\r\n\r\n            System.out.println(\"Press 1 for Add user\");\r\n            System.out.println(\"Press 2 for Remove user\");\r\n            System.out.println(\"Press 3 for Login user \");\r\n            System.out.println(\"Press 4 for Logout user \");\r\n            System.out.println(\"Press 5 for Create new order\");\r\n            System.out.println(\"Press 6 for Add product to order\");\r\n            System.out.println(\"Press 7 for Display order\");\r\n            System.out.println(\"Press 8 for Link Product \");\r\n            System.out.println(\"Press 9 for Add Product \");\r\n            System.out.println(\"Press 10 for Delete Product \");\r\n            System.out.println(\"Press 11 for ShowAllObjects \");\r\n            System.out.println(\"Press 12 for ShowObjectId \");\r\n            System.out.println(\"Press 13 to Quit\\n \\n \");\r\n\r\n            choice = scanner.nextInt();\r\n\r\n            switch (choice) {\r\n\r\n                //First case for finding the addition\r\n                case 1:\r\n                    System.out.println(\"Enter login id: \");\r\n                    String login_id = reader.readLine();\r\n                    System.out.println(\"Enter password: \");\r\n                    String pass = reader.readLine();\r\n                    System.out.println(\"Premium account: - Yes enter 1/Not enter 0\");\r\n                    int p_account = scanner.nextInt();\r\n                    System.out.println(\"Enter customer country: \");\r\n                    String customer_country = reader.readLine();\r\n                    System.out.println(\"Enter customer city: \");\r\n                    String customer_city = reader.readLine();\r\n                    System.out.println(\"Enter customer street: \");\r\n                    String customer_street = reader.readLine();\r\n                    System.out.println(\"Enter customer number: \");\r\n                    int customer_addres_num = scanner.nextInt();\r\n                    Address address = new Address(customer_country, customer_city, customer_street, customer_addres_num);\r\n                    System.out.println(\"Enter customer phone: \");\r\n                    String customer_phone = reader.readLine();\r\n                    System.out.println(\"Enter customer email: \");\r\n                    String customer_email = reader.readLine();\r\n                    if (!system.AddUser(login_id, pass, p_account, address, customer_phone, customer_email))\r\n                    {\r\n                        System.out.println(\"User is not valid\");\r\n                        break;\r\n\r\n                    }\r\n                    System.out.println(\"The user was successfully added\");\r\n                    break;\r\n\r\n                case 2:\r\n                    try\r\n                    {\r\n                        System.out.println(\"Enter login id: \");\r\n                        login_id = reader.readLine();\r\n                        if (!system.RemoveUser(login_id))\r\n                        {\r\n                            System.out.println(\"User does not exist\");\r\n                            break;\r\n                        }\r\n                    }\r\n                    catch (Exception Error)\r\n                    {\r\n                        System.out.println(Error.getMessage());\r\n                        break;\r\n                    }\r\n                    System.out.println(\"The user was successfully removed\");\r\n                    break;\r\n                case 3:\r\n                    try\r\n                    {\r\n                        System.out.println(\"Enter login id: \");\r\n                        login_id = reader.readLine();\r\n                        System.out.println(\"Enter password: \");\r\n                        pass = reader.readLine();\r\n                        if (!system.loginUser(login_id, pass))\r\n                        {\r\n                            System.out.println(\"Login problem\");\r\n                            break;\r\n                        }\r\n                    }\r\n                    catch (Exception Error)\r\n                    {\r\n                        System.out.println(Error.getMessage());\r\n                        break;\r\n                    }\r\n                    System.out.println(\"The user was successfully logged in\");\r\n                    break;\r\n                case 4:\r\n                    try\r\n                    {\r\n                        System.out.println(\"Enter login id: \");\r\n                        login_id = reader.readLine();\r\n                        if (!system.logoutUser(login_id))\r\n                        {\r\n                            System.out.println(\"logout problem\");\r\n                            break;\r\n                        }\r\n                    }\r\n                    catch (Exception Error)\r\n                    {\r\n                        System.out.println(Error.getMessage());\r\n                        break;\r\n                    }\r\n                    System.out.println(\"The user was successfully Logged out\");\r\n                    break;\r\n                case 5:\r\n                    try\r\n                    {\r\n                        System.out.println(\"Enter login id: \");\r\n                        login_id = reader.readLine();\r\n                        System.out.println(\"Enter customer country: \");\r\n                        customer_country = reader.readLine();\r\n                        System.out.println(\"Enter customer city: \");\r\n                        customer_city = reader.readLine();\r\n                        System.out.println(\"Enter customer street: \");\r\n                        customer_street = reader.readLine();\r\n                        System.out.println(\"Enter customer number: \");\r\n                        customer_addres_num = scanner.nextInt();\r\n                        address = new Address(customer_country, customer_city, customer_street, customer_addres_num);\r\n                        system.Create_new_order(address);\r\n                    }\r\n                    catch (Exception Error)\r\n                    {\r\n                        System.out.println(Error.getMessage());\r\n                        break;\r\n                    }\r\n                    System.out.println(\"A new order has been successfully created\");\r\n                    break;\r\n                case 6:\r\n                    try\r\n                    {\r\n                        System.out.println(\"Enter order id: \");\r\n                        String order_id = reader.readLine();\r\n                        System.out.println(\"Enter seller login id: \");\r\n                        login_id = reader.readLine();\r\n                        System.out.println(\"Enter product name: \");\r\n                        String product_name = reader.readLine();\r\n                        try\r\n                        {\r\n                            system.Add_product_to_order(order_id, login_id, product_name);\r\n\r\n                        }\r\n                        catch (Exception Error)\r\n                        {\r\n                            System.out.println(Error.getMessage());\r\n                            break;\r\n\r\n                        }\r\n                        System.out.println(\"Do you want to add payment method? Yes enter 1/Not enter 0\");\r\n                        int want_payment = scanner.nextInt();\r\n                        if (want_payment == 0)\r\n                        {\r\n                            break;\r\n                        }\r\n                        if (want_payment == 1)\r\n                        {\r\n                            System.out.println(\"Which payment method you prefer? \");\r\n                            System.out.println(\"For delayed payment press 1 \");\r\n                            System.out.println(\"For immediate payment press 0 \");\r\n                            int payment_type = scanner.nextInt();\r\n                            if (payment_type == 1)\r\n                            {\r\n                                System.out.println(\"Enter details\");\r\n                                String details = reader.readLine();\r\n                                System.out.println(\"Enter payment date in the following format: \");\r\n                                System.out.println(\"DD/MM/YYYY\");\r\n                                String payment_date = reader.readLine();\r\n                                Date date = new SimpleDateFormat(\"dd/MM/yyyy\").parse(payment_date);\r\n                                DelayedPayment delayed_payment = system.AddDelayedPayment(order_id, details, date);\r\n                                System.out.println(delayed_payment.toString());\r\n\r\n                            }\r\n                            if (payment_type == 0)\r\n                            {\r\n                                System.out.println(\"Enter details\");\r\n                                String details = reader.readLine();\r\n                                System.out.println(\"Payment with phoneconfirmation? Yes enter 1/Not enter 0\");\r\n                                int pc = scanner.nextInt();\r\n                                if (pc == 0)\r\n                                {\r\n                                    ImmediatePayment immediate_payment  = system.AddImmediatePayment(order_id, details, false);\r\n                                    System.out.println(immediate_payment.toString());\r\n\r\n                                }\r\n                                if (pc == 1)\r\n                                {\r\n                                    ImmediatePayment immediate_payment= system.AddImmediatePayment(order_id, details, true);\r\n                                    System.out.println(immediate_payment.toString());\r\n\r\n                                }\r\n\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                    catch (Exception Error)\r\n                    {\r\n\r\n                        System.out.println(Error.getMessage());\r\n                        break;\r\n                    }\r\n                    System.out.println(\"Adding a product to the order was done successfully\");\r\n                    break;\r\n                case 7:\r\n                    try\r\n                    {\r\n                        system.DisplayOrder();\r\n                    } catch (Exception Error)\r\n                    {\r\n\r\n                        System.out.println(Error.getMessage());\r\n                        break;\r\n                    }\r\n                    System.out.println(\"Display order done\");\r\n                    break;\r\n                case 8:\r\n                    try\r\n                    {\r\n                        System.out.println(\"Enter product name: \");\r\n                        String name = reader.readLine();\r\n                        System.out.println(\"Enter price: \");\r\n                        int price = scanner.nextInt();\r\n                        System.out.println(\"Enter product quantity: \");\r\n                        int Quan = scanner.nextInt();\r\n                        system.LinkProduct(name, price, Quan);\r\n                    }\r\n                    catch (Exception Error)\r\n                    {\r\n                        System.out.println(Error.getMessage());\r\n                        break;\r\n                    }\r\n                    System.out.println(\"Link product done\");\r\n\r\n                    break;\r\n                case 9:\r\n                    System.out.println(\"Enter name: \");\r\n                    String name = reader.readLine();\r\n                    System.out.println(\"Enter supplier: \");\r\n                    String supllierName = reader.readLine();\r\n                    system.AddProduct(name, supllierName);\r\n\r\n                    System.out.println(\"Product has been added\");\r\n                    break;\r\n                case 10:\r\n                    try\r\n                    {\r\n                        System.out.println(\"Enter product name: \");\r\n                        name = reader.readLine();\r\n                        system.Delete_Product(name);\r\n                    }\r\n                    catch (Exception Error)\r\n                    {\r\n\r\n                        System.out.println(Error.getMessage());\r\n                        break;\r\n                    }\r\n                    System.out.println(\"Product has been deleted\");\r\n                    break;\r\n                case 11:\r\n                    system.ShowAllObjects();\r\n                    System.out.println(\"Show all objects done\");\r\n                    break;\r\n                case 12:\r\n                    int choose;\r\n                    while (true)\r\n                    {\r\n                        System.out.println(\"Please choose category: \");\r\n                        System.out.println(\"Press 1 for user\");\r\n                        System.out.println(\"Press 2 for product\");\r\n                        System.out.println(\"Press 3 for supplier \");\r\n                        System.out.println(\"Press 4 for other object\");\r\n                        System.out.println(\"Press 5 to return \\n \\n \");\r\n\r\n                        choose = scanner.nextInt();\r\n                        switch (choose)\r\n                        {\r\n                            case 1:\r\n                                try\r\n                                {\r\n                                    System.out.println(\"Enter id: \");\r\n                                    String id = reader.readLine();\r\n                                    system.ShowObjectUSER(id);\r\n                                }\r\n                                catch (Exception Error)\r\n                                {\r\n                                    System.out.println(Error.getMessage());\r\n                                    break;\r\n                                }\r\n                                System.out.println(\"Show user id was done\");\r\n                                break;\r\n\r\n                            case 2:\r\n                                try\r\n                                {\r\n                                    System.out.println(\"Enter id: \");\r\n                                    String id = reader.readLine();\r\n                                    system.ShowObjectProduct(id);\r\n                                }\r\n                                catch (Exception Error)\r\n                                {\r\n                                    System.out.println(Error.getMessage());\r\n                                    break;\r\n                                }\r\n                                System.out.println(\"Show product id was done\");\r\n\r\n                                break;\r\n\r\n                            case 3:\r\n                                try\r\n                                {\r\n                                    System.out.println(\"Enter id:\");\r\n                                    String id = reader.readLine();\r\n                                    system.ShowObjectSupplier(id);\r\n                                }\r\n                                catch (Exception Error)\r\n                                {\r\n                                    System.out.println(Error.getMessage());\r\n                                    break;\r\n                                }\r\n                                System.out.println(\"Show supplier id was done\");\r\n                                break;\r\n\r\n                            case 4:\r\n                                try\r\n                                {\r\n                                    System.out.println(\"Enter id: \");\r\n                                    String id = reader.readLine();\r\n                                    system.ShowObjectID(id);\r\n                                }\r\n                                catch (Exception Error)\r\n                                {\r\n                                    System.out.println(Error.getMessage());\r\n                                    break;\r\n                                }\r\n                                System.out.println(\"Show object id was done\");\r\n                                break;\r\n\r\n                            case 5:\r\n                                break;\r\n\r\n                            default:\r\n                                System.out.println(\"Invalid choice!Please make a valid choice. \\\\n\\\\n\");\r\n                        }\r\n                    }\r\n                case 13:\r\n                    return;\r\n                //default case to display the message invalid choice made by the user\r\n                default:\r\n                    System.out.println(\"Invalid choice!Please make a valid choice. \\\\n\\\\n\");\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision b709f20a31c79a6f918d078fac5f921dc50bca6f)
+++ b/src/Main.java	(date 1668605525484)
@@ -4,22 +4,22 @@
 import java.io.InputStreamReader;
 import java.text.SimpleDateFormat;
 import java.util.Date;
+import java.util.InputMismatchException;
 import java.util.Scanner;
 
 
-public class Main
-{
+public class Main {
     public static void main(String[] args) throws IOException {
         /* System initialization  */
         SystemC system = new SystemC();
         //Supplier osem = new Supplier("Osem");
         //Supplier EastWest = new Supplier("EastWest");
         //Product bamba = new Product("Bamba",osem);
-        system.AddProduct("Bamba","Osem");
-        system.AddProduct("Ramen","EastWest");
+        system.AddProduct("Bamba", "Osem");
+        system.AddProduct("Ramen", "EastWest");
         //Product ramen = new Product("Ramen",EastWest);
-        system.AddUser("Dani","Dani123",0,null,null,null);
-        system.AddUser("Dana","Dana123",1,null,null,null);
+        system.AddUser("Dani", "Dani123", 0, null, null, null);
+        system.AddUser("Dana", "Dana123", 1, null, null, null);
         PremiumAccount danaIsPremium = (PremiumAccount) User.UserDict.get("Dana").get_customer().get_account();
         danaIsPremium.AddProductByName("Bamba");
         /* End of System initialization  */
@@ -28,362 +28,345 @@
         BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
         Scanner scanner = new Scanner(System.in);
         int choice;
-        while(true)
-        {
+
+
+
+            while (true) {
+                try {
 
-            System.out.println("Press 1 for Add user");
-            System.out.println("Press 2 for Remove user");
-            System.out.println("Press 3 for Login user ");
-            System.out.println("Press 4 for Logout user ");
-            System.out.println("Press 5 for Create new order");
-            System.out.println("Press 6 for Add product to order");
-            System.out.println("Press 7 for Display order");
-            System.out.println("Press 8 for Link Product ");
-            System.out.println("Press 9 for Add Product ");
-            System.out.println("Press 10 for Delete Product ");
-            System.out.println("Press 11 for ShowAllObjects ");
-            System.out.println("Press 12 for ShowObjectId ");
-            System.out.println("Press 13 to Quit\n \n ");
+                    System.out.println("Press 1 for Add user");
+                    System.out.println("Press 2 for Remove user");
+                    System.out.println("Press 3 for Login user ");
+                    System.out.println("Press 4 for Logout user ");
+                    System.out.println("Press 5 for Create new order");
+                    System.out.println("Press 6 for Add product to order");
+                    System.out.println("Press 7 for Display order");
+                    System.out.println("Press 8 for Link Product ");
+                    System.out.println("Press 9 for Add Product ");
+                    System.out.println("Press 10 for Delete Product ");
+                    System.out.println("Press 11 for ShowAllObjects ");
+                    System.out.println("Press 12 for ShowObjectId ");
+                    System.out.println("Press 13 to Quit\n \n ");
 
-            choice = scanner.nextInt();
+                    choice = scanner.nextInt();
 
-            switch (choice) {
+                    switch (choice) {
 
-                //First case for finding the addition
-                case 1:
-                    System.out.println("Enter login id: ");
-                    String login_id = reader.readLine();
-                    System.out.println("Enter password: ");
-                    String pass = reader.readLine();
-                    System.out.println("Premium account: - Yes enter 1/Not enter 0");
-                    int p_account = scanner.nextInt();
-                    System.out.println("Enter customer country: ");
-                    String customer_country = reader.readLine();
-                    System.out.println("Enter customer city: ");
-                    String customer_city = reader.readLine();
-                    System.out.println("Enter customer street: ");
-                    String customer_street = reader.readLine();
-                    System.out.println("Enter customer number: ");
-                    int customer_addres_num = scanner.nextInt();
-                    Address address = new Address(customer_country, customer_city, customer_street, customer_addres_num);
-                    System.out.println("Enter customer phone: ");
-                    String customer_phone = reader.readLine();
-                    System.out.println("Enter customer email: ");
-                    String customer_email = reader.readLine();
-                    if (!system.AddUser(login_id, pass, p_account, address, customer_phone, customer_email))
-                    {
-                        System.out.println("User is not valid");
-                        break;
+                        //First case for finding the addition
+                        case 1:
+                            System.out.println("Enter login id: ");
+                            String login_id = reader.readLine();
+                            System.out.println("Enter password: ");
+                            String pass = reader.readLine();
+                            System.out.println("Premium account: - Yes enter 1/Not enter 0");
+
+                            int p_account = scanner.nextInt();
+
+
+                            System.out.println("Enter customer country: ");
+                            String customer_country = reader.readLine();
+                            System.out.println("Enter customer city: ");
+                            String customer_city = reader.readLine();
+                            System.out.println("Enter customer street: ");
+                            String customer_street = reader.readLine();
+                            System.out.println("Enter customer number: ");
+                            int customer_addres_num = scanner.nextInt();
+                            Address address = new Address(customer_country, customer_city, customer_street, customer_addres_num);
+                            System.out.println("Enter customer phone: ");
+                            String customer_phone = reader.readLine();
+                            System.out.println("Enter customer email: ");
+                            String customer_email = reader.readLine();
+                            if (!system.AddUser(login_id, pass, p_account, address, customer_phone, customer_email)) {
+                                System.out.println("User is not valid");
+                                break;
 
-                    }
-                    System.out.println("The user was successfully added");
-                    break;
+                            }
+
+
+                        {
+
+                        }
+
+                        System.out.println("The user was successfully added");
+                        break;
 
-                case 2:
-                    try
-                    {
-                        System.out.println("Enter login id: ");
-                        login_id = reader.readLine();
-                        if (!system.RemoveUser(login_id))
-                        {
-                            System.out.println("User does not exist");
-                            break;
-                        }
-                    }
-                    catch (Exception Error)
-                    {
-                        System.out.println(Error.getMessage());
-                        break;
-                    }
-                    System.out.println("The user was successfully removed");
-                    break;
-                case 3:
-                    try
-                    {
-                        System.out.println("Enter login id: ");
-                        login_id = reader.readLine();
-                        System.out.println("Enter password: ");
-                        pass = reader.readLine();
-                        if (!system.loginUser(login_id, pass))
-                        {
-                            System.out.println("Login problem");
-                            break;
-                        }
-                    }
-                    catch (Exception Error)
-                    {
-                        System.out.println(Error.getMessage());
-                        break;
-                    }
-                    System.out.println("The user was successfully logged in");
-                    break;
-                case 4:
-                    try
-                    {
-                        System.out.println("Enter login id: ");
-                        login_id = reader.readLine();
-                        if (!system.logoutUser(login_id))
-                        {
-                            System.out.println("logout problem");
-                            break;
-                        }
-                    }
-                    catch (Exception Error)
-                    {
-                        System.out.println(Error.getMessage());
-                        break;
-                    }
-                    System.out.println("The user was successfully Logged out");
-                    break;
-                case 5:
-                    try
-                    {
-                        System.out.println("Enter login id: ");
-                        login_id = reader.readLine();
-                        System.out.println("Enter customer country: ");
-                        customer_country = reader.readLine();
-                        System.out.println("Enter customer city: ");
-                        customer_city = reader.readLine();
-                        System.out.println("Enter customer street: ");
-                        customer_street = reader.readLine();
-                        System.out.println("Enter customer number: ");
-                        customer_addres_num = scanner.nextInt();
-                        address = new Address(customer_country, customer_city, customer_street, customer_addres_num);
-                        system.Create_new_order(address);
-                    }
-                    catch (Exception Error)
-                    {
-                        System.out.println(Error.getMessage());
-                        break;
-                    }
-                    System.out.println("A new order has been successfully created");
-                    break;
-                case 6:
-                    try
-                    {
-                        System.out.println("Enter order id: ");
-                        String order_id = reader.readLine();
-                        System.out.println("Enter seller login id: ");
-                        login_id = reader.readLine();
-                        System.out.println("Enter product name: ");
-                        String product_name = reader.readLine();
-                        try
-                        {
-                            system.Add_product_to_order(order_id, login_id, product_name);
+                        case 2:
+                            try {
+                                System.out.println("Enter login id: ");
+                                login_id = reader.readLine();
+                                if (!system.RemoveUser(login_id)) {
+                                    System.out.println("User does not exist");
+                                    break;
+                                }
+                            } catch (Exception Error) {
+                                System.out.println(Error.getMessage());
+                                break;
+                            }
+                            System.out.println("The user was successfully removed");
+                            break;
+                        case 3:
+                            try {
+                                System.out.println("Enter login id: ");
+                                login_id = reader.readLine();
+                                System.out.println("Enter password: ");
+                                pass = reader.readLine();
+                                if (!system.loginUser(login_id, pass)) {
+                                    System.out.println("Login problem");
+                                    break;
+                                }
+                            } catch (Exception Error) {
+                                System.out.println(Error.getMessage());
+                                break;
+                            }
+                            System.out.println("The user was successfully logged in");
+                            break;
+                        case 4:
+                            try {
+                                System.out.println("Enter login id: ");
+                                login_id = reader.readLine();
+                                if (!system.logoutUser(login_id)) {
+                                    System.out.println("logout problem");
+                                    break;
+                                }
+                            } catch (Exception Error) {
+                                System.out.println(Error.getMessage());
+                                break;
+                            }
+                            System.out.println("The user was successfully Logged out");
+                            break;
+                        case 5:
+                            try {
+                                System.out.println("Enter login id: ");
+                                login_id = reader.readLine();
+                                System.out.println("Enter customer country: ");
+                                customer_country = reader.readLine();
+                                System.out.println("Enter customer city: ");
+                                customer_city = reader.readLine();
+                                System.out.println("Enter customer street: ");
+                                customer_street = reader.readLine();
+                                System.out.println("Enter customer number: ");
+                                customer_addres_num = scanner.nextInt();
+                                address = new Address(customer_country, customer_city, customer_street, customer_addres_num);
+                                system.Create_new_order(address);
+                            } catch (Exception Error) {
+                                System.out.println(Error.getMessage());
+                                break;
+                            }
+                            System.out.println("A new order has been successfully created");
+                            break;
+                        case 6:
+                            try {
+                                System.out.println("Enter order id: ");
+                                String order_id = reader.readLine();
+                                System.out.println("Enter seller login id: ");
+                                login_id = reader.readLine();
+                                System.out.println("Enter product name: ");
+                                String product_name = reader.readLine();
+                                try {
+                                    system.Add_product_to_order(order_id, login_id, product_name);
 
-                        }
-                        catch (Exception Error)
-                        {
-                            System.out.println(Error.getMessage());
-                            break;
+                                } catch (Exception Error) {
+                                    System.out.println(Error.getMessage());
+                                    break;
 
-                        }
-                        System.out.println("Do you want to add payment method? Yes enter 1/Not enter 0");
-                        int want_payment = scanner.nextInt();
-                        if (want_payment == 0)
-                        {
-                            break;
-                        }
-                        if (want_payment == 1)
-                        {
-                            System.out.println("Which payment method you prefer? ");
-                            System.out.println("For delayed payment press 1 ");
-                            System.out.println("For immediate payment press 0 ");
-                            int payment_type = scanner.nextInt();
-                            if (payment_type == 1)
-                            {
-                                System.out.println("Enter details");
-                                String details = reader.readLine();
-                                System.out.println("Enter payment date in the following format: ");
-                                System.out.println("DD/MM/YYYY");
-                                String payment_date = reader.readLine();
-                                Date date = new SimpleDateFormat("dd/MM/yyyy").parse(payment_date);
-                                DelayedPayment delayed_payment = system.AddDelayedPayment(order_id, details, date);
-                                System.out.println(delayed_payment.toString());
+                                }
+                                System.out.println("Do you want to add payment method? Yes enter 1/Not enter 0");
+                                int want_payment = scanner.nextInt();
+                                if (want_payment == 0) {
+                                    break;
+                                }
+                                if (want_payment == 1) {
+                                    System.out.println("Which payment method you prefer? ");
+                                    System.out.println("For delayed payment press 1 ");
+                                    System.out.println("For immediate payment press 0 ");
+                                    int payment_type = scanner.nextInt();
+                                    if (payment_type == 1) {
+                                        System.out.println("Enter details");
+                                        String details = reader.readLine();
+                                        System.out.println("Enter payment date in the following format: ");
+                                        System.out.println("DD/MM/YYYY");
+                                        String payment_date = reader.readLine();
+                                        Date date = new SimpleDateFormat("dd/MM/yyyy").parse(payment_date);
+                                        DelayedPayment delayed_payment = system.AddDelayedPayment(order_id, details, date);
+                                        System.out.println(delayed_payment.toString());
 
-                            }
-                            if (payment_type == 0)
-                            {
-                                System.out.println("Enter details");
-                                String details = reader.readLine();
-                                System.out.println("Payment with phoneconfirmation? Yes enter 1/Not enter 0");
-                                int pc = scanner.nextInt();
-                                if (pc == 0)
-                                {
-                                    ImmediatePayment immediate_payment  = system.AddImmediatePayment(order_id, details, false);
-                                    System.out.println(immediate_payment.toString());
+                                    }
+                                    if (payment_type == 0) {
+                                        System.out.println("Enter details");
+                                        String details = reader.readLine();
+                                        System.out.println("Payment with phoneconfirmation? Yes enter 1/Not enter 0");
+                                        int pc = scanner.nextInt();
+                                        if (pc == 0) {
+                                            ImmediatePayment immediate_payment = system.AddImmediatePayment(order_id, details, false);
+                                            System.out.println(immediate_payment.toString());
 
-                                }
-                                if (pc == 1)
-                                {
-                                    ImmediatePayment immediate_payment= system.AddImmediatePayment(order_id, details, true);
-                                    System.out.println(immediate_payment.toString());
+                                        }
+                                        if (pc == 1) {
+                                            ImmediatePayment immediate_payment = system.AddImmediatePayment(order_id, details, true);
+                                            System.out.println(immediate_payment.toString());
 
-                                }
+                                        }
 
-                            }
-                        }
+                                    }
+                                }
 
-                    }
-                    catch (Exception Error)
-                    {
+                            } catch (Exception Error) {
 
-                        System.out.println(Error.getMessage());
-                        break;
-                    }
-                    System.out.println("Adding a product to the order was done successfully");
-                    break;
-                case 7:
-                    try
-                    {
-                        system.DisplayOrder();
-                    } catch (Exception Error)
-                    {
+                                System.out.println(Error.getMessage());
+                                break;
+                            }
+                            System.out.println("Adding a product to the order was done successfully");
+                            break;
+                        case 7:
+                            try {
+                                system.DisplayOrder();
+                            } catch (Exception Error) {
 
-                        System.out.println(Error.getMessage());
-                        break;
-                    }
-                    System.out.println("Display order done");
-                    break;
-                case 8:
-                    try
-                    {
-                        System.out.println("Enter product name: ");
-                        String name = reader.readLine();
-                        System.out.println("Enter price: ");
-                        int price = scanner.nextInt();
-                        System.out.println("Enter product quantity: ");
-                        int Quan = scanner.nextInt();
-                        system.LinkProduct(name, price, Quan);
-                    }
-                    catch (Exception Error)
-                    {
-                        System.out.println(Error.getMessage());
-                        break;
-                    }
-                    System.out.println("Link product done");
+                                System.out.println(Error.getMessage());
+                                break;
+                            }
+                            System.out.println("Display order done");
+                            break;
+                        case 8:
+                            try {
+                                System.out.println("Enter product name: ");
+                                String name = reader.readLine();
+                                System.out.println("Enter price: ");
+                                int price = scanner.nextInt();
+                                System.out.println("Enter product quantity: ");
+                                int Quan = scanner.nextInt();
+                                system.LinkProduct(name, price, Quan);
+                            } catch (Exception Error) {
+                                System.out.println(Error.getMessage());
+                                break;
+                            }
+                            System.out.println("Link product done");
 
-                    break;
-                case 9:
-                    System.out.println("Enter name: ");
-                    String name = reader.readLine();
-                    System.out.println("Enter supplier: ");
-                    String supllierName = reader.readLine();
-                    system.AddProduct(name, supllierName);
+                            break;
+                        case 9:
+                            System.out.println("Enter name: ");
+                            String name = reader.readLine();
+                            System.out.println("Enter supplier: ");
+                            String supllierName = reader.readLine();
+                            system.AddProduct(name, supllierName);
 
-                    System.out.println("Product has been added");
-                    break;
-                case 10:
-                    try
-                    {
-                        System.out.println("Enter product name: ");
-                        name = reader.readLine();
-                        system.Delete_Product(name);
-                    }
-                    catch (Exception Error)
-                    {
+                            System.out.println("Product has been added");
+                            break;
+                        case 10:
+                            try {
+                                System.out.println("Enter product name: ");
+                                name = reader.readLine();
+                                system.Delete_Product(name);
+                            } catch (Exception Error) {
 
-                        System.out.println(Error.getMessage());
-                        break;
-                    }
-                    System.out.println("Product has been deleted");
-                    break;
-                case 11:
-                    system.ShowAllObjects();
-                    System.out.println("Show all objects done");
-                    break;
-                case 12:
-                    int choose;
-                    while (true)
-                    {
-                        System.out.println("Please choose category: ");
-                        System.out.println("Press 1 for user");
-                        System.out.println("Press 2 for product");
-                        System.out.println("Press 3 for supplier ");
-                        System.out.println("Press 4 for other object");
-                        System.out.println("Press 5 to return \n \n ");
+                                System.out.println(Error.getMessage());
+                                break;
+                            }
+                            System.out.println("Product has been deleted");
+                            break;
+                        case 11:
+                            system.ShowAllObjects();
+                            System.out.println("Show all objects done");
+                            break;
+                        case 12:
+                            int choose;
+                            while (true) {
+                                System.out.println("Please choose category: ");
+                                System.out.println("Press 1 for user");
+                                System.out.println("Press 2 for product");
+                                System.out.println("Press 3 for supplier ");
+                                System.out.println("Press 4 for other object");
+                                System.out.println("Press 5 to return \n \n ");
 
-                        choose = scanner.nextInt();
-                        switch (choose)
-                        {
-                            case 1:
-                                try
-                                {
-                                    System.out.println("Enter id: ");
-                                    String id = reader.readLine();
-                                    system.ShowObjectUSER(id);
-                                }
-                                catch (Exception Error)
-                                {
-                                    System.out.println(Error.getMessage());
-                                    break;
-                                }
-                                System.out.println("Show user id was done");
-                                break;
+                                choose = scanner.nextInt();
+                                switch (choose) {
+                                    case 1:
+                                        try {
+                                            System.out.println("Enter id: ");
+                                            String id = reader.readLine();
+                                            system.ShowObjectUSER(id);
+                                        } catch (Exception Error) {
+                                            System.out.println(Error.getMessage());
+                                            break;
+                                        }
+                                        System.out.println("Show user id was done");
+                                        break;
 
-                            case 2:
-                                try
-                                {
-                                    System.out.println("Enter id: ");
-                                    String id = reader.readLine();
-                                    system.ShowObjectProduct(id);
-                                }
-                                catch (Exception Error)
-                                {
-                                    System.out.println(Error.getMessage());
-                                    break;
-                                }
-                                System.out.println("Show product id was done");
+                                    case 2:
+                                        try {
+                                            System.out.println("Enter id: ");
+                                            String id = reader.readLine();
+                                            system.ShowObjectProduct(id);
+                                        } catch (Exception Error) {
+                                            System.out.println(Error.getMessage());
+                                            break;
+                                        }
+                                        System.out.println("Show product id was done");
 
-                                break;
+                                        break;
 
-                            case 3:
-                                try
-                                {
-                                    System.out.println("Enter id:");
-                                    String id = reader.readLine();
-                                    system.ShowObjectSupplier(id);
-                                }
-                                catch (Exception Error)
-                                {
-                                    System.out.println(Error.getMessage());
-                                    break;
-                                }
-                                System.out.println("Show supplier id was done");
-                                break;
+                                    case 3:
+                                        try {
+                                            System.out.println("Enter id:");
+                                            String id = reader.readLine();
+                                            system.ShowObjectSupplier(id);
+                                        } catch (Exception Error) {
+                                            System.out.println(Error.getMessage());
+                                            break;
+                                        }
+                                        System.out.println("Show supplier id was done");
+                                        break;
 
-                            case 4:
-                                try
-                                {
-                                    System.out.println("Enter id: ");
-                                    String id = reader.readLine();
-                                    system.ShowObjectID(id);
-                                }
-                                catch (Exception Error)
-                                {
-                                    System.out.println(Error.getMessage());
-                                    break;
-                                }
-                                System.out.println("Show object id was done");
-                                break;
+                                    case 4:
+                                        try {
+                                            System.out.println("Enter id: ");
+                                            String id = reader.readLine();
+                                            system.ShowObjectID(id);
+                                        } catch (Exception Error) {
+                                            System.out.println(Error.getMessage());
+                                            break;
+                                        }
+                                        System.out.println("Show object id was done");
+                                        break;
 
-                            case 5:
-                                break;
+                                    case 5:
+                                        break;
 
-                            default:
-                                System.out.println("Invalid choice!Please make a valid choice. \\n\\n");
-                        }
-                    }
-                case 13:
-                    return;
-                //default case to display the message invalid choice made by the user
-                default:
-                    System.out.println("Invalid choice!Please make a valid choice. \\n\\n");
+                                    default:
+                                        System.out.println("Invalid choice!Please make a valid choice. \\n\\n");
+                                }
+                            }
+                        case 13:
+                            return;
+                        //default case to display the message invalid choice made by the user
+                        default:
+                            System.out.println("Invalid choice!Please make a valid choice. \\n\\n");
+                    }
+                } catch (InputMismatchException ex) {
+
+                    System.out.println("Please insert a valid Input.");
+                    System.out.println("Press 1 for Add user");
+                    System.out.println("Press 2 for Remove user");
+                    System.out.println("Press 3 for Login user ");
+                    System.out.println("Press 4 for Logout user ");
+                    System.out.println("Press 5 for Create new order");
+                    System.out.println("Press 6 for Add product to order");
+                    System.out.println("Press 7 for Display order");
+                    System.out.println("Press 8 for Link Product ");
+                    System.out.println("Press 9 for Add Product ");
+                    System.out.println("Press 10 for Delete Product ");
+                    System.out.println("Press 11 for ShowAllObjects ");
+                    System.out.println("Press 12 for ShowObjectId ");
+                    System.out.println("Press 13 to Quit\n \n ");
+
+                    //continue;
+                    // choice = 1;
+
 
-            }
+                }
 
-        }
+
+            }
 
+        }
     }
-
-}
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_40_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_40_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_40_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_40_[Changes]/shelved.patch	(revision b709f20a31c79a6f918d078fac5f921dc50bca6f)
+++ /dev/null	(revision b709f20a31c79a6f918d078fac5f921dc50bca6f)
@@ -1,256 +0,0 @@
-Index: src/Customer.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>public class Customer {\r\n\r\n    private String _id;\r\n    private Address _address;\r\n\r\n    public Customer() {\r\n\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/Customer.java b/src/Customer.java
---- a/src/Customer.java	(revision 62bba546737af037ff8ca59bf539ab88805e057c)
-+++ b/src/Customer.java	(date 1667997013887)
-@@ -1,7 +1,49 @@
- public class Customer {
- 
-     private String _id;
-+
-+    public Customer(String _id, Address _address, String _phone, String _email) {
-+        this._id = _id;
-+        this._address = _address;
-+        this._phone = _phone;
-+        this._email = _email;
-+    }
-+
-+    public String get_id() {
-+        return _id;
-+    }
-+
-+    public void set_id(String _id) {
-+        this._id = _id;
-+    }
-+
-+    public Address get_address() {
-+        return _address;
-+    }
-+
-+    public void set_address(Address _address) {
-+        this._address = _address;
-+    }
-+
-+    public String get_phone() {
-+        return _phone;
-+    }
-+
-+    public void set_phone(String _phone) {
-+        this._phone = _phone;
-+    }
-+
-+    public String get_email() {
-+        return _email;
-+    }
-+
-+    public void set_email(String _email) {
-+        this._email = _email;
-+    }
-+
-     private Address _address;
-+    private String _phone;
-+    private String _email;
- 
-     public Customer() {
- 
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5198120f-0955-4c57-bec4-bc285fab6ab4\" name=\"Changes\" comment=\"test1\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/Address.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/Customer.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2HGzfH0UCszOQZeFNGHalD4475Y\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"5198120f-0955-4c57-bec4-bc285fab6ab4\" name=\"Changes\" comment=\"\" />\r\n      <created>1667926313386</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1667926313386</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"test1\">\r\n      <created>1667926772421</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1667926772421</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"test1\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"test1\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 62bba546737af037ff8ca59bf539ab88805e057c)
-+++ b/.idea/workspace.xml	(date 1667997576941)
-@@ -1,10 +1,12 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-   <component name="ChangeListManager">
--    <list default="true" id="5198120f-0955-4c57-bec4-bc285fab6ab4" name="Changes" comment="test1">
--      <change afterPath="$PROJECT_DIR$/src/Address.java" afterDir="false" />
--      <change afterPath="$PROJECT_DIR$/src/Customer.java" afterDir="false" />
-+    <list default="true" id="5198120f-0955-4c57-bec4-bc285fab6ab4" name="Changes" comment="address class added">
-+      <change afterPath="$PROJECT_DIR$/src/Account.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/src/PremiumAccount.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/src/User.java" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-+      <change beforePath="$PROJECT_DIR$/src/Customer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Customer.java" afterDir="false" />
-     </list>
-     <option name="SHOW_DIALOG" value="false" />
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-@@ -50,7 +52,14 @@
-       <option name="project" value="LOCAL" />
-       <updated>1667926772421</updated>
-     </task>
--    <option name="localTasksCounter" value="2" />
-+    <task id="LOCAL-00002" summary="address class added">
-+      <created>1667996651815</created>
-+      <option name="number" value="00002" />
-+      <option name="presentableId" value="LOCAL-00002" />
-+      <option name="project" value="LOCAL" />
-+      <updated>1667996651815</updated>
-+    </task>
-+    <option name="localTasksCounter" value="3" />
-     <servers />
-   </component>
-   <component name="Vcs.Log.Tabs.Properties">
-@@ -66,6 +75,7 @@
-   </component>
-   <component name="VcsManagerConfiguration">
-     <MESSAGE value="test1" />
--    <option name="LAST_COMMIT_MESSAGE" value="test1" />
-+    <MESSAGE value="address class added" />
-+    <option name="LAST_COMMIT_MESSAGE" value="address class added" />
-   </component>
- </project>
-\ No newline at end of file
-Index: src/PremiumAccount.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/PremiumAccount.java b/src/PremiumAccount.java
-new file mode 100644
---- /dev/null	(date 1667997576902)
-+++ b/src/PremiumAccount.java	(date 1667997576902)
-@@ -0,0 +1,8 @@
-+import java.util.Date;
-+
-+public class PremiumAccount extends Account {
-+
-+    public PremiumAccount(String _id, String _billing_address, boolean _is_closed, Date _open, Date _closed, int _balance) {
-+        super(_id, _billing_address, _is_closed, _open, _closed, _balance);
-+    }
-+}
-Index: src/Account.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/Account.java b/src/Account.java
-new file mode 100644
---- /dev/null	(date 1667997519635)
-+++ b/src/Account.java	(date 1667997519635)
-@@ -0,0 +1,70 @@
-+import java.util.Date;
-+
-+public class Account {
-+    private String _id;
-+    private String _billing_address;
-+    private boolean _is_closed;
-+    private Date _open;
-+    private Date _closed;
-+    private int _balance;
-+
-+    public Account(String _id, String _billing_address, boolean _is_closed, Date _open, Date _closed, int _balance) {
-+        this._id = _id;
-+        this._billing_address = _billing_address;
-+        this._is_closed = _is_closed;
-+        this._open = _open;
-+        this._closed = _closed;
-+        this._balance = _balance;
-+    }
-+
-+    public String get_id() {
-+        return _id;
-+    }
-+
-+    public void set_id(String _id) {
-+        this._id = _id;
-+    }
-+
-+    public String get_billing_address() {
-+        return _billing_address;
-+    }
-+
-+    public void set_billing_address(String _billing_address) {
-+        this._billing_address = _billing_address;
-+    }
-+
-+    public boolean is_is_closed() {
-+        return _is_closed;
-+    }
-+
-+    public void set_is_closed(boolean _is_closed) {
-+        this._is_closed = _is_closed;
-+    }
-+
-+    public Date get_open() {
-+        return _open;
-+    }
-+
-+    public void set_open(Date _open) {
-+        this._open = _open;
-+    }
-+
-+    public Date get_closed() {
-+        return _closed;
-+    }
-+
-+    public void set_closed(Date _closed) {
-+        this._closed = _closed;
-+    }
-+
-+    public int get_balance() {
-+        return _balance;
-+    }
-+
-+    public void set_balance(int _balance) {
-+        this._balance = _balance;
-+    }
-+
-+
-+
-+}
-Index: src/User.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/User.java b/src/User.java
-new file mode 100644
---- /dev/null	(date 1667997207834)
-+++ b/src/User.java	(date 1667997207834)
-@@ -0,0 +1,36 @@
-+public class User {
-+    private String _login_id;
-+    private String _password;
-+    //private UserState _state;
-+
-+    //public UserState get_state(){
-+    //  return _state;
-+    //}
-+
-+    //public UserState set_state(UserState _state){
-+    //  this._state = _state;
-+
-+
-+
-+    public String get_login_id() {
-+        return _login_id;
-+    }
-+
-+    public void set_login_id(String _login_id) {
-+        this._login_id = _login_id;
-+    }
-+
-+    public String get_password() {
-+        return _password;
-+    }
-+
-+    public void set_password(String _password) {
-+        this._password = _password;
-+    }
-+
-+    public User(String _login_id, String _password) { //SHOULD ADD USER STATE HERE!
-+        this._login_id = _login_id;
-+        this._password = _password;
-+        //this._state = _state;
-+    }
-+}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_40__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_40__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_40__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_40__Changes_.xml	(revision b709f20a31c79a6f918d078fac5f921dc50bca6f)
+++ /dev/null	(revision b709f20a31c79a6f918d078fac5f921dc50bca6f)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_09_11_2022_14_40_[Changes]" date="1667997621416" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_40_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 09/11/2022 14:40 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_08_11_2022_18_59__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_08_11_2022_18_59__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_08_11_2022_18_59__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_08_11_2022_18_59__Changes_.xml	(revision b709f20a31c79a6f918d078fac5f921dc50bca6f)
+++ /dev/null	(revision b709f20a31c79a6f918d078fac5f921dc50bca6f)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_08_11_2022_18_59_[Changes]" date="1667926811023" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_08_11_2022_18_59_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 08/11/2022 18:59 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_08_11_2022_18_59_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_08_11_2022_18_59_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_08_11_2022_18_59_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_08_11_2022_18_59_[Changes]/shelved.patch	(revision b709f20a31c79a6f918d078fac5f921dc50bca6f)
+++ /dev/null	(revision b709f20a31c79a6f918d078fac5f921dc50bca6f)
@@ -1,75 +0,0 @@
-Index: src/Main.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>public class Main {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello world!\");\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/Main.java b/src/Main.java
---- a/src/Main.java	(revision 256c537da75f9e06b18e4ff64d39ad6989744391)
-+++ b/src/Main.java	(date 1667926796615)
-@@ -1,5 +1,7 @@
- public class Main {
--    public static void main(String[] args) {
-+    public static void main(String[] args)
-+
-+    {
-         System.out.println("Hello world!");
-     }
- }
-\ No newline at end of file
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5198120f-0955-4c57-bec4-bc285fab6ab4\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2HGzfH0UCszOQZeFNGHalD4475Y\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"5198120f-0955-4c57-bec4-bc285fab6ab4\" name=\"Changes\" comment=\"\" />\r\n      <created>1667926313386</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1667926313386</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision 256c537da75f9e06b18e4ff64d39ad6989744391)
-+++ b/.idea/workspace.xml	(date 1667926712935)
-@@ -23,6 +23,20 @@
-     "WebServerToolWindowFactoryState": "false"
-   }
- }]]></component>
-+  <component name="RunManager">
-+    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-+      <option name="MAIN_CLASS_NAME" value="Main" />
-+      <module name="Tichon_HW1" />
-+      <method v="2">
-+        <option name="Make" enabled="true" />
-+      </method>
-+    </configuration>
-+    <recent_temporary>
-+      <list>
-+        <item itemvalue="Application.Main" />
-+      </list>
-+    </recent_temporary>
-+  </component>
-   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
-   <component name="TaskManager">
-     <task active="true" id="Default" summary="Default task">
-@@ -31,7 +45,22 @@
-       <option name="number" value="Default" />
-       <option name="presentableId" value="Default" />
-       <updated>1667926313386</updated>
-+      <workItem from="1667926315079" duration="386000" />
-     </task>
-     <servers />
-   </component>
-+  <component name="TypeScriptGeneratedFilesManager">
-+    <option name="version" value="3" />
-+  </component>
-+  <component name="Vcs.Log.Tabs.Properties">
-+    <option name="TAB_STATES">
-+      <map>
-+        <entry key="MAIN">
-+          <value>
-+            <State />
-+          </value>
-+        </entry>
-+      </map>
-+    </option>
-+  </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_27_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_27_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_27_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_27_[Changes]/shelved.patch	(revision b709f20a31c79a6f918d078fac5f921dc50bca6f)
+++ /dev/null	(revision b709f20a31c79a6f918d078fac5f921dc50bca6f)
@@ -1,166 +0,0 @@
-Index: src/Main.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>public class Main {\r\n    public static void main(String[] args) {\r\n        System.out.println(\"Hello world!\");\r\n        System.out.println(\"Change 1\");\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/Main.java b/src/Main.java
---- a/src/Main.java	(revision efd95733656a7ab745f95ac4784cd9a45594bc87)
-+++ b/src/Main.java	(date 1667926800840)
-@@ -1,5 +1,7 @@
- public class Main {
--    public static void main(String[] args) {
-+    public static void main(String[] args)
-+
-+    {
-         System.out.println("Hello world!");
-         System.out.println("Change 1");
-     }
-Index: src/LineItem.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/LineItem.java b/src/LineItem.java
-new file mode 100644
---- /dev/null	(date 1667996836922)
-+++ b/src/LineItem.java	(date 1667996836922)
-@@ -0,0 +1,26 @@
-+public class LineItem {
-+    private int _quantity;
-+    private int _price;
-+    public void setQuantity(int quantity) {
-+        this._quantity = quantity;
-+    }
-+    public LineItem(int quantity, int price) {
-+        this._quantity = quantity;
-+        this._price = price;
-+    }
-+
-+    public void setPrice(int price) {
-+        this._price = price;
-+    }
-+
-+
-+    public int getQuantity() {
-+        return _quantity;
-+    }
-+
-+    public int getPrice() {
-+        return _price;
-+    }
-+
-+
-+}
-Index: src/ShoppingCart.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/src/ShoppingCart.java b/src/ShoppingCart.java
-new file mode 100644
---- /dev/null	(date 1667996836932)
-+++ b/src/ShoppingCart.java	(date 1667996836932)
-@@ -0,0 +1,19 @@
-+import java.util.Date;
-+
-+public class ShoppingCart
-+{
-+    private Date _created;
-+
-+    public void setCreated(Date created) {
-+        this._created = created;
-+
-+    }
-+
-+    public Date getCreated() {
-+        return _created;
-+    }
-+
-+    public ShoppingCart(Date created) {
-+        this._created = created;
-+    }
-+}
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_X\" default=\"true\" project-jdk-name=\"corretto-18\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
---- a/.idea/misc.xml	(revision efd95733656a7ab745f95ac4784cd9a45594bc87)
-+++ b/.idea/misc.xml	(date 1667926818945)
-@@ -1,6 +1,6 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
--  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="corretto-18" project-jdk-type="JavaSDK">
-+  <component name="ProjectRootManager" version="2" languageLevel="JDK_18" default="true" project-jdk-name="corretto-18" project-jdk-type="JavaSDK">
-     <output url="file://$PROJECT_DIR$/out" />
-   </component>
- </project>
-\ No newline at end of file
-Index: .idea/workspace.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5198120f-0955-4c57-bec4-bc285fab6ab4\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2HGzfH0UCszOQZeFNGHalD4475Y\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"5198120f-0955-4c57-bec4-bc285fab6ab4\" name=\"Changes\" comment=\"\" />\r\n      <created>1667926313386</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1667926313386</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
---- a/.idea/workspace.xml	(revision efd95733656a7ab745f95ac4784cd9a45594bc87)
-+++ b/.idea/workspace.xml	(date 1667996691573)
-@@ -2,6 +2,8 @@
- <project version="4">
-   <component name="ChangeListManager">
-     <list default="true" id="5198120f-0955-4c57-bec4-bc285fab6ab4" name="Changes" comment="">
-+      <change afterPath="$PROJECT_DIR$/src/LineItem.java" afterDir="false" />
-+      <change afterPath="$PROJECT_DIR$/src/ShoppingCart.java" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-       <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
-@@ -10,6 +12,13 @@
-     <option name="HIGHLIGHT_CONFLICTS" value="true" />
-     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-     <option name="LAST_RESOLUTION" value="IGNORE" />
-+  </component>
-+  <component name="FileTemplateManagerImpl">
-+    <option name="RECENT_TEMPLATES">
-+      <list>
-+        <option value="Class" />
-+      </list>
-+    </option>
-   </component>
-   <component name="Git.Settings">
-     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-@@ -23,9 +32,26 @@
-     <option name="hideEmptyMiddlePackages" value="true" />
-     <option name="showLibraryContents" value="true" />
-   </component>
--  <component name="PropertiesComponent">
--    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
--    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
-+  <component name="PropertiesComponent">{
-+  &quot;keyToString&quot;: {
-+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;
-+  }
-+}</component>
-+  <component name="RunManager">
-+    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-+      <option name="MAIN_CLASS_NAME" value="Main" />
-+      <module name="Tichon_HW1" />
-+      <method v="2">
-+        <option name="Make" enabled="true" />
-+      </method>
-+    </configuration>
-+    <recent_temporary>
-+      <list>
-+        <item itemvalue="Application.Main" />
-+      </list>
-+    </recent_temporary>
-   </component>
-   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
-   <component name="TaskManager">
Index: .idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_27__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_27__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_27__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_27__Changes_.xml	(revision b709f20a31c79a6f918d078fac5f921dc50bca6f)
+++ /dev/null	(revision b709f20a31c79a6f918d078fac5f921dc50bca6f)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_09_11_2022_14_27_[Changes]" date="1667996864862" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_27_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 09/11/2022 14:27 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_X\" default=\"true\" project-jdk-name=\"corretto-18\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision b709f20a31c79a6f918d078fac5f921dc50bca6f)
+++ b/.idea/misc.xml	(date 1668603415164)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="corretto-18" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_18" default="true" project-jdk-name="corretto-18" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"5198120f-0955-4c57-bec4-bc285fab6ab4\" name=\"Changes\" comment=\"hi\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/PremiumAccount.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/PremiumAccount.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/SystemC.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/SystemC.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2HGzfH0UCszOQZeFNGHalD4475Y\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"Tichon_HW1\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Test.test\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Tichon_HW1\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Test\" />\r\n      <option name=\"METHOD_NAME\" value=\"test\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"JUnit.Test.test\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"5198120f-0955-4c57-bec4-bc285fab6ab4\" name=\"Changes\" comment=\"\" />\r\n      <created>1667926313386</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1667926313386</updated>\r\n      <workItem from=\"1668324775726\" duration=\"2848000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"test1\">\r\n      <created>1667926772421</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1667926772421</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Add User func\">\r\n      <created>1668366678281</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668366678281</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Add User func\">\r\n      <created>1668366709485</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668366709485</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"user func update&#10;customer id and account id update\">\r\n      <created>1668425961720</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668425961720</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"user func update&#10;customer id and account id update\">\r\n      <created>1668426006216</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668426006216</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"SystemC class, login method.\">\r\n      <created>1668427248803</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668427248803</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"error class created\">\r\n      <created>1668427786309</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668427786309</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"exceptions\">\r\n      <created>1668430381827</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668430381827</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"blabla\">\r\n      <created>1668433819230</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668433819230</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"blabla\">\r\n      <created>1668433837748</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668433837748</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"hara ba leben\">\r\n      <created>1668447329261</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668447329261</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"hara ba leben\">\r\n      <created>1668448548558</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668448548558</updated>\r\n    </task>\r\n    <task id=\"LOCAL\u200E00013\" summary=\"update 2\">\r\n      <created>1668520421015</created>\r\n      <option name=\"number\" value=\"LOCAL\u200E00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL\u200E00013\" />\r\n      <updated>1668520421015</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"hara ba leben\">\r\n      <created>1668522944004</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668522944004</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"hara ba leben\">\r\n      <created>1668532433693</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668532433693</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"16\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"test1\" />\r\n    <MESSAGE value=\"Add User func\" />\r\n    <MESSAGE value=\"user func update&#10;customer id and account id update\" />\r\n    <MESSAGE value=\"SystemC class, login method.\" />\r\n    <MESSAGE value=\"error class created\" />\r\n    <MESSAGE value=\"exceptions\" />\r\n    <MESSAGE value=\"blabla\" />\r\n    <MESSAGE value=\"update 2\" />\r\n    <MESSAGE value=\"hara ba leben\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"hara ba leben\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/Main.java</url>\r\n          <line>52</line>\r\n          <option name=\"timeStamp\" value=\"24\" />\r\n        </line-breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.util.InputMismatchException\" package=\"java.util\" />\r\n          <option name=\"timeStamp\" value=\"25\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b709f20a31c79a6f918d078fac5f921dc50bca6f)
+++ b/.idea/workspace.xml	(date 1668605525512)
@@ -1,11 +1,16 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="5198120f-0955-4c57-bec4-bc285fab6ab4" name="Changes" comment="hi">
+    <list default="true" id="9262f2f0-af8d-43a7-b255-09edff5c737d" name="Changes" comment="hi">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_08_11_2022_18_59_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_08_11_2022_18_59__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_27_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_27__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_40_[Changes]/shelved.patch" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_09_11_2022_14_40__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/PremiumAccount.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PremiumAccount.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/SystemC.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/SystemC.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -24,6 +29,9 @@
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
+  </component>
+  <component name="ProblemsViewState">
+    <option name="selectedTabId" value="CurrentFile" />
   </component>
   <component name="ProjectId" id="2HGzfH0UCszOQZeFNGHalD4475Y" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
@@ -156,19 +164,17 @@
       <option name="presentableId" value="LOCAL‎00013" />
       <updated>1668520421015</updated>
     </task>
-    <task id="LOCAL-00014" summary="hara ba leben">
-      <created>1668522944004</created>
-      <option name="number" value="00014" />
-      <option name="presentableId" value="LOCAL-00014" />
-      <option name="project" value="LOCAL" />
-      <updated>1668522944004</updated>
+    <task id="LOCAL‎00014" summary="update 2">
+      <created>1668520528643</created>
+      <option name="number" value="LOCAL‎00014" />
+      <option name="presentableId" value="LOCAL‎00014" />
+      <updated>1668520528643</updated>
     </task>
-    <task id="LOCAL-00015" summary="hara ba leben">
-      <created>1668532433693</created>
-      <option name="number" value="00015" />
-      <option name="presentableId" value="LOCAL-00015" />
-      <option name="project" value="LOCAL" />
-      <updated>1668532433693</updated>
+    <task id="LOCAL‎00015" summary="update 2">
+      <created>1668520548704</created>
+      <option name="number" value="LOCAL‎00015" />
+      <option name="presentableId" value="LOCAL‎00015" />
+      <updated>1668520548704</updated>
     </task>
     <option name="localTasksCounter" value="16" />
     <servers />
@@ -195,21 +201,21 @@
     <MESSAGE value="error class created" />
     <MESSAGE value="exceptions" />
     <MESSAGE value="blabla" />
-    <MESSAGE value="update 2" />
     <MESSAGE value="hara ba leben" />
-    <option name="LAST_COMMIT_MESSAGE" value="hara ba leben" />
+    <MESSAGE value="update 2" />
+    <option name="LAST_COMMIT_MESSAGE" value="update 2" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
       <breakpoints>
         <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/Main.java</url>
-          <line>52</line>
-          <option name="timeStamp" value="24" />
+          <url>file://$PROJECT_DIR$/src/SystemC.java</url>
+          <line>249</line>
+          <option name="timeStamp" value="21" />
         </line-breakpoint>
         <breakpoint enabled="true" type="java-exception">
           <properties class="java.util.InputMismatchException" package="java.util" />
-          <option name="timeStamp" value="25" />
+          <option name="timeStamp" value="22" />
         </breakpoint>
       </breakpoints>
     </breakpoint-manager>
